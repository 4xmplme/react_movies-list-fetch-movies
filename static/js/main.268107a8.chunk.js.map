{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","_getMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","wrap","_context","prev","next","abrupt","fetch","concat","then","res","json","catch","Response","Error","stop","apply","arguments","FindMovie","onMovieAdd","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","count","setCount","_Fragment","onSubmit","event","preventDefault","_x","getMovie","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","value","id","placeholder","cn","onChange","target","disabled","onClick","App","setMovies","every","m","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268107a8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  // eslint-disable-next-line max-len\n  const DEFAULT_POSTER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl !== 'N/A' ? movie.imgUrl : DEFAULT_POSTER}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {movie.title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from '../types/MovieData';\nimport { ResponseError } from '../types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7450cb8e';\n\nexport async function getMovie(\n  query: string,\n): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movie';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleMovieAdd = () => {\n    setQuery('');\n    setMovie(null);\n    setCount(0);\n    onMovieAdd(movie as Movie);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setCount(prev => prev + 1);\n    setIsLoading(true);\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setHasError(true);\n        } else {\n          setMovie({\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          });\n        }\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': hasError })}\n              onChange={onQueryChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n            >\n              {count === 0 ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onMovieAdd = (movie: Movie) => {\n    if (movies.every(m => m.imdbId !== movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={onMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}